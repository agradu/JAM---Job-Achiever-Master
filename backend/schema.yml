openapi: 3.0.3
info:
  title: JAM - Job Achiever Master
  version: 0.0.0
paths:
  /api/v1/applications/:
    get:
      operationId: api_v1_applications_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedApplicationsList'
          description: ''
    post:
      operationId: api_v1_applications_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Applications'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Applications'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Applications'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications'
          description: ''
  /api/v1/applications/{id}/:
    get:
      operationId: api_v1_applications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications'
          description: ''
    put:
      operationId: api_v1_applications_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Applications'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Applications'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Applications'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications'
          description: ''
    patch:
      operationId: api_v1_applications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedApplications'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedApplications'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedApplications'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Applications'
          description: ''
    delete:
      operationId: api_v1_applications_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/cv_generator/{id}/:
    get:
      operationId: api_v1_cv_generator_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/cv_generator/pdf/{id}/:
    get:
      operationId: api_v1_cv_generator_pdf_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/dependencies/language/:
    get:
      operationId: api_v1_dependencies_language_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLanguageList'
          description: ''
    post:
      operationId: api_v1_dependencies_language_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Language'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Language'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Language'
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
          description: ''
  /api/v1/dependencies/language/{id}/:
    get:
      operationId: api_v1_dependencies_language_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this language.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
          description: ''
    put:
      operationId: api_v1_dependencies_language_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this language.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Language'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Language'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Language'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
          description: ''
    patch:
      operationId: api_v1_dependencies_language_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this language.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLanguage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLanguage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLanguage'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Language'
          description: ''
    delete:
      operationId: api_v1_dependencies_language_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this language.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/email_sender/mail/:
    post:
      operationId: api_v1_email_sender_mail_create
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/letter_generator/{id}/:
    get:
      operationId: api_v1_letter_generator_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/letter_generator/pdf/{id}/:
    get:
      operationId: api_v1_letter_generator_pdf_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/profiles/education/:
    get:
      operationId: api_v1_profiles_education_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEducationList'
          description: ''
    post:
      operationId: api_v1_profiles_education_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Education'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Education'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
  /api/v1/profiles/education/{id}/:
    get:
      operationId: api_v1_profiles_education_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this education.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
    put:
      operationId: api_v1_profiles_education_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this education.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Education'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Education'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Education'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
    patch:
      operationId: api_v1_profiles_education_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this education.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEducation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEducation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEducation'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Education'
          description: ''
    delete:
      operationId: api_v1_profiles_education_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this education.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/profiles/experience/:
    get:
      operationId: api_v1_profiles_experience_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedExperienceList'
          description: ''
    post:
      operationId: api_v1_profiles_experience_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experience'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experience'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experience'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
  /api/v1/profiles/experience/{id}/:
    get:
      operationId: api_v1_profiles_experience_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this experience.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
    put:
      operationId: api_v1_profiles_experience_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this experience.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Experience'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Experience'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Experience'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
    patch:
      operationId: api_v1_profiles_experience_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this experience.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedExperience'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedExperience'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedExperience'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Experience'
          description: ''
    delete:
      operationId: api_v1_profiles_experience_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this experience.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/profiles/hobby/:
    get:
      operationId: api_v1_profiles_hobby_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProfileHobbyList'
          description: ''
    post:
      operationId: api_v1_profiles_hobby_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileHobby'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileHobby'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileHobby'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileHobby'
          description: ''
  /api/v1/profiles/hobby/{id}/:
    get:
      operationId: api_v1_profiles_hobby_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile hobby.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileHobby'
          description: ''
    put:
      operationId: api_v1_profiles_hobby_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile hobby.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileHobby'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileHobby'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileHobby'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileHobby'
          description: ''
    patch:
      operationId: api_v1_profiles_hobby_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile hobby.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfileHobby'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfileHobby'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfileHobby'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileHobby'
          description: ''
    delete:
      operationId: api_v1_profiles_hobby_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile hobby.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/profiles/language/:
    get:
      operationId: api_v1_profiles_language_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProfileLanguageList'
          description: ''
    post:
      operationId: api_v1_profiles_language_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileLanguage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileLanguage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileLanguage'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileLanguage'
          description: ''
  /api/v1/profiles/language/{id}/:
    get:
      operationId: api_v1_profiles_language_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile language.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileLanguage'
          description: ''
    put:
      operationId: api_v1_profiles_language_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile language.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileLanguage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileLanguage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileLanguage'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileLanguage'
          description: ''
    patch:
      operationId: api_v1_profiles_language_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile language.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfileLanguage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfileLanguage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfileLanguage'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileLanguage'
          description: ''
    delete:
      operationId: api_v1_profiles_language_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile language.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/profiles/profile/:
    get:
      operationId: api_v1_profiles_profile_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProfileList'
          description: ''
    post:
      operationId: api_v1_profiles_profile_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /api/v1/profiles/profile/{id}/:
    get:
      operationId: api_v1_profiles_profile_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: api_v1_profiles_profile_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Profile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: api_v1_profiles_profile_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfile'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    delete:
      operationId: api_v1_profiles_profile_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/profiles/skill/:
    get:
      operationId: api_v1_profiles_skill_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProfileSkillList'
          description: ''
    post:
      operationId: api_v1_profiles_skill_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileSkill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileSkill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileSkill'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileSkill'
          description: ''
  /api/v1/profiles/skill/{id}/:
    get:
      operationId: api_v1_profiles_skill_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile skill.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileSkill'
          description: ''
    put:
      operationId: api_v1_profiles_skill_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile skill.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileSkill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileSkill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileSkill'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileSkill'
          description: ''
    patch:
      operationId: api_v1_profiles_skill_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile skill.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfileSkill'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfileSkill'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfileSkill'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileSkill'
          description: ''
    delete:
      operationId: api_v1_profiles_skill_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this profile skill.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/registration/register/:
    post:
      operationId: api_v1_registration_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/schedulers/:
    get:
      operationId: api_v1_schedulers_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSchedulerList'
          description: ''
    post:
      operationId: api_v1_schedulers_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scheduler'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Scheduler'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Scheduler'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scheduler'
          description: ''
  /api/v1/schedulers/{id}/:
    get:
      operationId: api_v1_schedulers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scheduler.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scheduler'
          description: ''
    put:
      operationId: api_v1_schedulers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scheduler.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scheduler'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Scheduler'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Scheduler'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scheduler'
          description: ''
    patch:
      operationId: api_v1_schedulers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scheduler.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedScheduler'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedScheduler'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedScheduler'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scheduler'
          description: ''
    delete:
      operationId: api_v1_schedulers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this scheduler.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/simulations/analyze/:
    post:
      operationId: api_v1_simulations_analyze_create
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/simulations/gpt/:
    post:
      operationId: api_v1_simulations_gpt_create
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/simulations/simulations/:
    get:
      operationId: api_v1_simulations_simulations_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSimulationSerialazerList'
          description: ''
    post:
      operationId: api_v1_simulations_simulations_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimulationSerialazer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SimulationSerialazer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SimulationSerialazer'
        required: true
      security:
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationSerialazer'
          description: ''
  /api/v1/simulations/simulations/{id}/:
    get:
      operationId: api_v1_simulations_simulations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this simulation.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationSerialazer'
          description: ''
    put:
      operationId: api_v1_simulations_simulations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this simulation.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimulationSerialazer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SimulationSerialazer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SimulationSerialazer'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationSerialazer'
          description: ''
    patch:
      operationId: api_v1_simulations_simulations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this simulation.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSimulationSerialazer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSimulationSerialazer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSimulationSerialazer'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationSerialazer'
          description: ''
    delete:
      operationId: api_v1_simulations_simulations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this simulation.
        required: true
      tags:
      - api
      security:
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /dj-rest-auth/login/:
    post:
      operationId: dj_rest_auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /dj-rest-auth/logout/:
    post:
      operationId: dj_rest_auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - dj-rest-auth
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /dj-rest-auth/password/change/:
    post:
      operationId: dj_rest_auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /dj-rest-auth/password/reset/:
    post:
      operationId: dj_rest_auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /dj-rest-auth/password/reset/confirm/:
    post:
      operationId: dj_rest_auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /dj-rest-auth/user/:
    get:
      operationId: dj_rest_auth_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - dj-rest-auth
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    put:
      operationId: dj_rest_auth_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
        required: true
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    patch:
      operationId: dj_rest_auth_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - dj-rest-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
  /schema/download/:
    get:
      operationId: schema_download_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    Applications:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        position:
          type: string
          maxLength: 255
        company:
          type: string
          maxLength: 255
        description:
          type: string
        cover_letter_text:
          type: string
        cv_short_description:
          type: string
          maxLength: 400
        company_email:
          type: string
          format: email
          maxLength: 255
        company_address:
          type: string
          maxLength: 255
        source:
          type: string
          maxLength: 255
        recruiter_name:
          type: string
          maxLength: 255
        recruiter_gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RecruiterGenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        recruiter_position:
          type: string
          maxLength: 255
        status:
          $ref: '#/components/schemas/StatusEnum'
        status_date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
        profile:
          type: integer
        application_language:
          type: integer
      required:
      - company
      - company_email
      - created_at
      - description
      - id
      - position
      - profile
    BlankEnum:
      enum:
      - ''
    Education:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 100
        school:
          type: string
          nullable: true
          maxLength: 100
        description:
          type: string
          nullable: true
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        profile:
          type: integer
      required:
      - id
      - profile
    Experience:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 50
        company:
          type: string
          nullable: true
          maxLength: 50
        description:
          type: string
          nullable: true
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        profile:
          type: integer
      required:
      - id
      - profile
    GenderEnum:
      enum:
      - male
      - female
      - other
      type: string
      description: |-
        * `male` - Male
        * `female` - Female
        * `other` - Other
    Language:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        language:
          type: string
          maxLength: 100
      required:
      - id
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    NullEnum:
      enum:
      - null
    PaginatedApplicationsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Applications'
    PaginatedEducationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Education'
    PaginatedExperienceList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Experience'
    PaginatedLanguageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Language'
    PaginatedProfileHobbyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProfileHobby'
    PaginatedProfileLanguageList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProfileLanguage'
    PaginatedProfileList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Profile'
    PaginatedProfileSkillList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProfileSkill'
    PaginatedSchedulerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Scheduler'
    PaginatedSimulationSerialazerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/SimulationSerialazer'
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PatchedApplications:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        position:
          type: string
          maxLength: 255
        company:
          type: string
          maxLength: 255
        description:
          type: string
        cover_letter_text:
          type: string
        cv_short_description:
          type: string
          maxLength: 400
        company_email:
          type: string
          format: email
          maxLength: 255
        company_address:
          type: string
          maxLength: 255
        source:
          type: string
          maxLength: 255
        recruiter_name:
          type: string
          maxLength: 255
        recruiter_gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RecruiterGenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        recruiter_position:
          type: string
          maxLength: 255
        status:
          $ref: '#/components/schemas/StatusEnum'
        status_date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
        profile:
          type: integer
        application_language:
          type: integer
    PatchedEducation:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 100
        school:
          type: string
          nullable: true
          maxLength: 100
        description:
          type: string
          nullable: true
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        profile:
          type: integer
    PatchedExperience:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 50
        company:
          type: string
          nullable: true
          maxLength: 50
        description:
          type: string
          nullable: true
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        profile:
          type: integer
    PatchedLanguage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        language:
          type: string
          maxLength: 100
    PatchedProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        picture:
          type: string
          nullable: true
          maxLength: 255
        birthday:
          type: string
          format: date
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        phone:
          type: string
          nullable: true
          maxLength: 50
        address:
          type: string
          nullable: true
          maxLength: 100
        social_link:
          type: string
          format: uri
          nullable: true
          maxLength: 255
        portfolio_link:
          type: string
          format: uri
          nullable: true
          maxLength: 255
        api_key:
          type: string
          nullable: true
          maxLength: 100
        user:
          type: integer
    PatchedProfileHobby:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 50
        profile:
          type: integer
    PatchedProfileLanguage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 50
        profile:
          type: integer
    PatchedProfileSkill:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 50
        profile:
          type: integer
    PatchedScheduler:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        interview_shedule:
          type: string
          format: date-time
        interview_time_before:
          type: string
          format: time
        interview_time_after:
          type: string
          format: time
        user:
          type: integer
        application:
          type: integer
    PatchedSimulationSerialazer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        recruiter_attitude:
          type: string
          nullable: true
          maxLength: 150
        json_file:
          type: object
          additionalProperties: {}
        review:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        application:
          type: integer
        language:
          type: integer
    PatchedUserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    Profile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        picture:
          type: string
          nullable: true
          maxLength: 255
        birthday:
          type: string
          format: date
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        phone:
          type: string
          nullable: true
          maxLength: 50
        address:
          type: string
          nullable: true
          maxLength: 100
        social_link:
          type: string
          format: uri
          nullable: true
          maxLength: 255
        portfolio_link:
          type: string
          format: uri
          nullable: true
          maxLength: 255
        api_key:
          type: string
          nullable: true
          maxLength: 100
        user:
          type: integer
      required:
      - id
      - user
    ProfileHobby:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 50
        profile:
          type: integer
      required:
      - id
      - profile
    ProfileLanguage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 50
        profile:
          type: integer
      required:
      - id
      - profile
    ProfileSkill:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          nullable: true
          maxLength: 50
        profile:
          type: integer
      required:
      - id
      - profile
    RecruiterGenderEnum:
      enum:
      - male
      - female
      - other
      type: string
      description: |-
        * `male` - Male
        * `female` - Female
        * `other` - Other
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    Scheduler:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        interview_shedule:
          type: string
          format: date-time
        interview_time_before:
          type: string
          format: time
        interview_time_after:
          type: string
          format: time
        user:
          type: integer
        application:
          type: integer
      required:
      - application
      - id
      - interview_shedule
      - interview_time_after
      - interview_time_before
      - user
    SimulationSerialazer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        recruiter_attitude:
          type: string
          nullable: true
          maxLength: 150
        json_file:
          type: object
          additionalProperties: {}
        review:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
        application:
          type: integer
        language:
          type: integer
      required:
      - application
      - created_at
      - id
      - user
    StatusEnum:
      enum:
      - Saved
      - Applied
      - Scheduled
      - Accepted
      - Rejected
      type: string
      description: |-
        * `Saved` - Saved
        * `Applied` - Applied
        * `Scheduled` - Scheduled
        * `Accepted` - Accepted
        * `Rejected` - Rejected
    Token:
      type: object
      description: Serializer for Token model.
      properties:
        key:
          type: string
          maxLength: 40
      required:
      - key
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          description: Your password can’t be too similar to your other personal information,
            must contain at least 8 characters and can’t be entirely numeric.
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
      required:
      - email
      - password
      - username
    UserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - pk
      - username
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
